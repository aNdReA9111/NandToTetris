// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    
    //if inc is true then we need to do in[] + 1 (with the Inc16, we increment the output of the register), else we just need in[]
    Inc16(in=out0, out=in-inc);
    Mux16(a=in, b=in-inc, sel=inc, out=out1);
    
    Mux16(a=out1, b=in, sel=load, out=out2);

    //if reset is true then we need to return 0 as output, else out2
    Mux16(a=out2, b[0..15] = false, sel=reset, out=out3);

    //we need to save the output in the register for the next clock cicle
    Register(in=out3, load=true, out=out, out=out0);
}
